server:
  port: 8080

spring:
  kafka:
    consumer:
      bootstrap-servers: 127.0.0.1:29092
      group-id: ba-re-consumer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    producer:
      bootstrap-servers: 127.0.0.1:29092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  main:
    allow-bean-definition-overriding: true
  redis:
    host: localhost
    port: 6500
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  config:
    activate:
      on-profile: dev

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3500/bad_request?characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: root

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true # log
        show_sql: true
        default_batch_fetch_size: 100
    open-in-view: false
    database: mysql

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        mime.charset=UTF-8:
        transport.protocol: smtp
        smtp:
          auth: true
          timeout: 5000
          starttls.enable: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${google.client-id}
            client-secret: ${google.client-secrete}
            redirect-uri: http://localhost:8080/api/v2/oauth/client/google
            scope:
              - email
              - profile
          kakao:
            client-id: ${kakao.client-id}
            client-secret: ${kakao.client-secrete}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/api/v2/oauth/client/kakao
            scope:
              - profile_nickname
              - account_email
            client-name: Kakao
            client-authentication-method: client_secret_post
          github:
            client-id: ${github.client-id}
            client-secret: ${github.client-secrete}
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/api/v2/oauth/client/github
            scope:
              - user:email
              - read:user
            client-name: GitHub
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://accounts.google.com/o/oauth2/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
            user-name-attribute: login


logging:
  pattern:
    #    file: "[%d{HH:mm:ss.SSS}][%-5level][%logger.%method:line%line] - %msg%n"
    file: "[%d{yyyy-MM-dd-HH:mm}][%-5level][%thread][%logger] - %msg%n"
  file:
    name: /Users/leechoongsub/desktop/log/test.log
  level:
    root: INFO
    org.springframework.orm.jpa: INFO
    org.springframework.transaction: INFO
    org.springframework.data.*.*: INFO
    org.springframework.cache.*: INFO
#    org.hibernate:
#      SQL: debug
#      type: Trace
  logback:
    rolling policy:
      file-name-pattern: "/Users/leechoongsub/desktop/log/test.log.%d{yyyy-MM-dd}.%i"
      max-file-size: 5MB
oauth:
  authorizedRedirectUris: http://localhost:8080

cloud:
  aws:
    region:
      static: ap-northeast-2
    stack:
      auto: false

token:
  secret-key: thisIsVeryVeryVeryImportantSecretKeySoMustHideThisKey
  access-life: 10
  refresh-life: 7

cookie-status:
  secure: false

mail:
  authentication-subject: Bad-Request 인증
  temporary-password: Bad-Request 임시 비밀번호 발급

s3-image:
  bucket-name: this-is-my-bucket
  bucket-url: https://bori-market-bucket.s3.ap-northeast-2.amazonaws.com/
  default-profile-image: https://bori-market-bucket.s3.ap-northeast-2.amazonaws.com/default/profile.jpg

greeting:
  server_kind: dev
  version: v2
  rest_docs: http//:localhost:8080/docs/index.html